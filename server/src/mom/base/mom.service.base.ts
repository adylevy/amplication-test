/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Mom as PrismaMom } from "@prisma/client";

export class MomServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.MomCountArgs, "select">): Promise<number> {
    return this.prisma.mom.count(args);
  }

  async moms(args: Prisma.MomFindManyArgs): Promise<PrismaMom[]> {
    return this.prisma.mom.findMany(args);
  }
  async mom(args: Prisma.MomFindUniqueArgs): Promise<PrismaMom | null> {
    return this.prisma.mom.findUnique(args);
  }
  async createMom(args: Prisma.MomCreateArgs): Promise<PrismaMom> {
    return this.prisma.mom.create(args);
  }
  async updateMom(args: Prisma.MomUpdateArgs): Promise<PrismaMom> {
    return this.prisma.mom.update(args);
  }
  async deleteMom(args: Prisma.MomDeleteArgs): Promise<PrismaMom> {
    return this.prisma.mom.delete(args);
  }
}
